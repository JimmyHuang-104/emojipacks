#!/usr/bin/env node

const program = require("commander"),
  { resolve } = require("path"),
  co = require("co"),
  fs = require("fs"),
  YAML = require("yaml");

/**
 * Usage.
 */

program
  .version(require("../package").version)
  .option("-d, --debug", "Run in debug mode")
  .option("-j, --json [value]", "source JSON file to parse into YAML")
  .option("-y, --pack [value]", "resulting YAML emoji pack path and name")
  .parse(process.argv);

co(function*() {
  const emojisJson = require(resolve(process.cwd(), program.json)),
    compiledEmojis = {},
    pendingAliases = {};

  if (emojisJson.ok === false) {
    console.log("Error getting Emoji JSON");

    return;
  }

  Object.keys(emojisJson.emoji).forEach(name => {
    const src = emojisJson.emoji[name];

    // Detect alias
    if (src.indexOf("alias:") === 0) {
      const aliasFor = src.split(":")[1];

      console.log(`processing alias ${name}`);

      if (pendingAliases[aliasFor] === undefined) {
        pendingAliases[aliasFor] = [];
      }

      pendingAliases[aliasFor].push(name);

      return;
    }

    console.log(`processing emoji ${name}`);
    compiledEmojis[name] = { name, src };
  });

  console.log("Merging aliases back in with the original set");
  Object.keys(pendingAliases).forEach(name => {
    if (compiledEmojis[name] === undefined) {
      compiledEmojis[name] = { name };
    }

    compiledEmojis[name].aliases = pendingAliases[name];
  });

  const yamlData = {
    title: program.pack,
    emojis: []
  };

  Object.keys(compiledEmojis).forEach(name => {
    yamlData.emojis.push(compiledEmojis[name]);
  });
  
  fs.writeFile(program.pack, YAML.stringify(yamlData), err => {
    if (err) console.log(err);
    else console.log(`${program.pack} Done`);
  });
});
